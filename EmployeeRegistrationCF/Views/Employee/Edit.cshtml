@model EmployeeRegistrationCF.Models.Employee
@{
    ViewBag.Title = "Edit";
}


<h2>Edit Employee</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" }, autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender" })
                    Male
                </label>
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender" })
                    Female
                </label>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Hobbies
            </label>
            <div class="col-md-10">
                @{
                    string[] selectedHobbies = null;
                    if(!string.IsNullOrEmpty(Model.Hobbies))
                    {
                       selectedHobbies=@Model.Hobbies.Split(',');
                    }
                  } 

                @{
                        string[] allHobbies = { "Music", "Driving", "Cricket", "Travel" };
                }
                                
                @{
                    for (int i = 0; i < allHobbies.Length; i++)
                    {
                        <label class="checkbox-inline">
                            @if (!string.IsNullOrEmpty(Model.Hobbies))
                            {
                                 if(selectedHobbies.Contains(allHobbies[i]))
                                 {
                                 <input type="checkbox" name="Hobbies" value="@allHobbies[i]" checked />
                                }
                            }
                            else
                            {
                            <input type="checkbox" name="Hobbies" value="@allHobbies[i]"/>
                            }                           
                            @allHobbies[i]
                            
                        </label>
                    }
                }
               </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-success" />
                </div>
            </div>
        </div>   
 }

<div>
    <a href="/Employee/Index" class="btn btn btn-info">Back To List</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.13.1.js"></script>
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $('#DOB').datepicker({
                showButtonPanel: true
            });
        });
    </script>
}
