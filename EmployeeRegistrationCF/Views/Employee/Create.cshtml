@model EmployeeRegistrationCF.Models.Employee


@{
    ViewBag.Title = "Create";
}

<h1>Employee Registration</h1>


@if (ViewBag.Message == true)
{
    <div class="alert alert-success alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <strong>Congratulations!</strong> You added record successfully!
    </div>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender" })
                    Male
                </label>
                <label class="radio-inline">
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender" })
                    Female
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </label>                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @*<div class="form-group">
            @Html.LabelFor(model=>model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="checkbox-inline">
                    @foreach(var item in ViewBag.HobbyList)
                    {
                   <input type="checkbox" value="@item.isChecked" name="Hobbies"/>
                    }
                </label>               
            </div>
        </div>*@      

   

         <div class="form-group">
            <label class="control-label col-md-2">
                Hobbies
            </label>
            <div class="col-md-10">

                @{                   
                     string[] allHobbies = { "Music", "Driving", "Cricket", "Travel" };                  
                }

                @foreach(var item in allHobbies)
                {
                    <label class="checkbox-inline">
                        <input type="checkbox" name="Hobbies" value="@item"/>
                        @item
                    </label>
                }


                <!--
                <label class="checkbox-inline">
                    @*@Html.CheckBox("Music", false)*@
                    <input type="checkbox" name="Hobbies" value="Music" />
                    Music
                </label>
                <label class="checkbox-inline">
                    @*@Html.CheckBox("Driving", false)*@
                    <input type="checkbox" name="Hobbies" value="Driving" />
                    Driving
                </label>
                <label class="checkbox-inline">
                    @*@Html.CheckBox("Cricket", false)*@
                    <input type="checkbox" name="Hobbies" value="Cricket" />
                    Cricket
                </label>
                <label class="checkbox-inline">
                    @*@Html.CheckBox("Travel", false)*@
                    <input type="checkbox" name="Hobbies" value="Travel" />
                    Travel
                </label>
                    -->
            </div>            
        </div>
      
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success"/>
            </div>
        </div>
    </div>
}

<div>
    <a href="/Employee/Index" class="btn btn btn-info">Back To List</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.13.1.js"></script>
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {

            $('#DOB').datepicker({
                showButtonPanel: true
            });

            var testval = [];

            $("input[name='Hobbies']").click(function () {

                $("input[name='Hobbies']:checked").each(function () {
                    favorite.push($(this).val());
                });

                //$.each($("input[name='Hobbies']:checked"), function () {
                //    testval.push($(this).val());
                //});
                //$('div').text(testval);
            });

            console.log(testval);


            var data = {
                name: $('#Name').val(),
                dob: $('#DOB').val(),
                gender: $("#Gender").val(),
                city: $('#City').val(),
                hobbies: testval,
                departmentid: $('#DepartmentId').val()
            };

            console.log(data);

            $('#SaveData').click(function () {

                $.ajax({
                    url: '/Employee/Create',
                    type: 'post',
                    data: data,
                    success: function (p) {
                        alert('Record Saved');
                        console.log(p);
                    },
                    error: function () {
                        alert('Something wrong');
                    }
                })
            });

        });

    </script>
}
